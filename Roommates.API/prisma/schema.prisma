generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model household_members {
  user_id      Int
  household_id Int
  role         String?    @db.VarChar(50)
  households   households @relation(fields: [household_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users        users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, household_id])
}

model households {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(100)
  address           String?
  city              String?
  created_at        DateTime?           @default(now()) @db.Timestamp(6)
  household_members household_members[]
  tasks             tasks[]
  users             users[]
}

model refresh_tokens {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  token      String    @db.VarChar(255)
  expires_at DateTime  @db.Timestamp(6)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tasks {
  id            Int        @id @default(autoincrement())
  household_id  Int
  created_by_id Int
  title         String     @db.VarChar(255)
  description   String?
  completed_at  DateTime?  @db.Timestamp(6)
  created_at    DateTime?  @default(now()) @db.Timestamp(6)
  households    households @relation(fields: [household_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_household")
  users         users      @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                   Int                 @id @default(autoincrement())
  name                 String              @unique @db.VarChar(50)
  email                String              @unique @db.VarChar(255)
  password             String              @db.VarChar(255)
  profile_picture      String?             @db.VarChar(255)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)
  default_household_id Int?
  household_members    household_members[]
  refresh_tokens       refresh_tokens[]
  tasks                tasks[]
  households           households?         @relation(fields: [default_household_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
